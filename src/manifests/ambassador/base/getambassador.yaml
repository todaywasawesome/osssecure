---
# Source: ambassador/templates/aes-agent.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ambassador-agent
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
---
# Source: ambassador/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ambassador
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
---
# Source: ambassador/templates/aes-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  annotations:
    helm.sh/resource-policy: keep
  name: release-name-ambassador-edge-stack
  namespace: default
type: Opaque
data:
  license-key: ""
---
# Source: ambassador/templates/aes-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: release-name-ambassador-agent
  labels:
    app.kubernetes.io/name: ambassador-agent
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
rules:
- apiGroups: [""]
  resources: [ "pods" ]
  verbs: [ "get", "list", "watch" ]
---
# Source: ambassador/templates/crds-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: release-name-ambassador-crds
  labels:
    app.kubernetes.io/name: ambassador
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
rules:
  - apiGroups: [ "apiextensions.k8s.io" ]
    resources:
    - customresourcedefinitions
    resourceNames:
    - authservices.getambassador.io
    - mappings.getambassador.io
    - modules.getambassador.io
    - ratelimitservices.getambassador.io
    - tcpmappings.getambassador.io
    - tlscontexts.getambassador.io
    - tracingservices.getambassador.io
    - kubernetesendpointresolvers.getambassador.io
    - kubernetesserviceresolvers.getambassador.io
    - consulresolvers.getambassador.io
    - filters.getambassador.io
    - filterpolicies.getambassador.io
    - ratelimits.getambassador.io
    - hosts.getambassador.io
    - logservices.getambassador.io
    verbs: ["get", "list", "watch", "delete"]
---
# Source: ambassador/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: release-name-ambassador
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
rules:
  - apiGroups: [""]
    resources:
    - namespaces
    - services
    - secrets
    - endpoints
    verbs: ["get", "list", "watch"]

  - apiGroups: [ "getambassador.io" ]
    resources: [ "*" ]
    verbs: ["get", "list", "watch", "update", "patch", "create", "delete" ]

  - apiGroups: [ "apiextensions.k8s.io" ]
    resources: [ "customresourcedefinitions" ]
    verbs: ["get", "list", "watch", "delete"]

  - apiGroups: [ "networking.internal.knative.dev"]
    resources: [ "clusteringresses", "ingresses" ]
    verbs: ["get", "list", "watch"]
    
  - apiGroups: [ "networking.internal.knative.dev"]
    resources: [ "clusteringresses/status", "ingresses/status" ]
    verbs: ["update"]

  - apiGroups: [ "extensions", "networking.k8s.io" ]
    resources: [ "ingresses", "ingressclasses" ]
    verbs: ["get", "list", "watch"]

  - apiGroups: [ "extensions", "networking.k8s.io" ]
    resources: [ "ingresses/status" ]
    verbs: ["update"]
  - apiGroups: [""]
    resources: [ "secrets" ]
    verbs: ["get", "list", "watch", "create", "update"]

  - apiGroups: [""]
    resources: [ "events" ]
    verbs: ["get", "list", "watch", "create", "patch"]

  - apiGroups: ["coordination.k8s.io"]
    resources: [ "leases" ]
    verbs: ["get", "create", "update"]

  - apiGroups: [""]
    resources: [ "endpoints" ]
    verbs: ["get", "list", "watch", "create", "update"]
---
# Source: ambassador/templates/aes-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-ambassador-agent
  labels:
    app.kubernetes.io/name: ambassador-agent
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ambassador-agent
subjects:
- kind: ServiceAccount
  name: release-name-ambassador-agent
  namespace: default
---
# Source: ambassador/templates/crds-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-ambassador-crds
  labels:
    app.kubernetes.io/name: ambassador
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ambassador-crds
subjects:
  - name: release-name-ambassador
    namespace: "default"
    kind: ServiceAccount
---
# Source: ambassador/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-ambassador
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ambassador
subjects:
  - name: release-name-ambassador
    namespace: default
    kind: ServiceAccount
---
# Source: ambassador/templates/aes-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: release-name-ambassador-agent-config
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
rules:
- apiGroups: [""]
  resources: [ "configmaps" ]
  verbs: [ "get", "list", "watch" ]
---
# Source: ambassador/templates/aes-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: release-name-ambassador-agent-config
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ambassador-agent-config
subjects:
- kind: ServiceAccount
  name: release-name-ambassador-agent
  namespace: default
---
# Source: ambassador/templates/admin-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ambassador-admin
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: release-name
    app.kubernetes.io/managed-by: Helm
    # Hard-coded label for Prometheus Operator ServiceMonitor
    service: ambassador-admin
    product: aes
  annotations:
    a8r.io/owner: "Ambassador Labs"
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/description: "The Ambassador Edge Stack admin service for internal use and health checks."
    a8r.io/documentation: https://www.getambassador.io/docs/latest/
    a8r.io/chat: http://d6e.co/slack
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/support: https://www.getambassador.io/about-us/support/
    a8r.io/dependencies: "None"
spec:
  type: ClusterIP
  ports:
    - port: 8877
      targetPort: admin
      protocol: TCP
      name: ambassador-admin
    - port: 8005
      targetPort: 8005
      protocol: TCP
      name: ambassador-snapshot
  selector:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/instance: release-name
---
# Source: ambassador/templates/aes-redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ambassador-redis
  namespace: default
  labels:
    app.kubernetes.io/name: release-name-ambassador-redis
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    a8r.io/owner: "Ambassador Labs"
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/description: "The Ambassador Edge Stack Redis store for auth and rate limiting, among other things."
    a8r.io/documentation: https://www.getambassador.io/docs/latest/
    a8r.io/chat: http://d6e.co/slack
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/support: https://www.getambassador.io/about-us/support/
    a8r.io/dependencies: "None"
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app.kubernetes.io/name: release-name-ambassador-redis
    app.kubernetes.io/instance: release-name
---
# Source: ambassador/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ambassador
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ambassador-service
    product: aes
  annotations:
    a8r.io/owner: "Ambassador Labs"
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/description: "The Ambassador Edge Stack goes beyond traditional API Gateways and Ingress Controllers with the advanced edge features needed to support developer self-service and full-cycle development."
    a8r.io/documentation: https://www.getambassador.io/docs/latest/
    a8r.io/chat: http://d6e.co/slack
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/support: https://www.getambassador.io/about-us/support/
    a8r.io/dependencies: release-name-ambassador-redis.default
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 32080
      protocol: TCP
    - name: https
      port: 443
      targetPort: 8443
      nodePort: 32443
      protocol: TCP
  selector:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/instance: release-name
---
# Source: ambassador/templates/aes-agent.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ambassador-agent
  namespace: default
  labels:
    app.kubernetes.io/name: release-name-ambassador-agent
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-ambassador-agent
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: release-name-ambassador-agent
        app.kubernetes.io/part-of: release-name
        helm.sh/chart: ambassador-6.6.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        product: aes
    spec:
      serviceAccountName: release-name-ambassador-agent
      containers:
      - name: agent
        image: "docker.io/datawire/aes:1.12.3"
        imagePullPolicy: IfNotPresent
        command: [ "agent" ]
        env:
        - name: AGENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AGENT_CONFIG_RESOURCE_NAME
          value: release-name-ambassador-agent-cloud-token
        - name: RPC_CONNECTION_ADDRESS
          value: https://app.getambassador.io/
        - name: AES_SNAPSHOT_URL
          value: "http://release-name-ambassador-admin.default:8005/snapshot-external"
---
# Source: ambassador/templates/aes-redis.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ambassador-redis
  namespace: default
  labels:
    app.kubernetes.io/name: release-name-ambassador-redis
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
  annotations:
    {}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-ambassador-redis
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: release-name-ambassador-redis
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - name: redis
        image: "redis:5.0.1"
        imagePullPolicy: IfNotPresent
        resources:
          {}
      restartPolicy: Always
---
# Source: ambassador/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ambassador
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    product: aes
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: ambassador
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ambassador
        app.kubernetes.io/part-of: release-name
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        product: aes
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      securityContext:
        runAsUser: 8888
      serviceAccountName: release-name-ambassador
      volumes:
        - name: ambassador-pod-info
          downwardAPI:
            items:
              - fieldRef:
                  fieldPath: metadata.labels
                path: labels
        - name: release-name-ambassador-edge-stack-secrets
          secret:
            secretName: release-name-ambassador-edge-stack
      containers:
        - name: ambassador
          image: "docker.io/datawire/aes:1.12.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: admin
              containerPort: 8877
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: REDIS_URL
              value: release-name-ambassador-redis:6379
            - name: AMBASSADOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /ambassador/v0/check_alive
              port: admin
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /ambassador/v0/check_ready
              port: admin
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 3
          volumeMounts:
            - name: ambassador-pod-info
              mountPath: /tmp/ambassador-pod-info
              readOnly: true
            - name: release-name-ambassador-edge-stack-secrets
              mountPath: /.config/ambassador
              readOnly: true
          resources:
            limits:
              cpu: 1000m
              memory: 600Mi
            requests:
              cpu: 200m
              memory: 300Mi
      imagePullSecrets:
        []
      dnsPolicy: ClusterFirst
      hostNetwork: false
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/crds.yaml
# GENERATED FILE: edits made by hand will not be preserved.
---
# Source: ambassador/templates/aes-authservice.yaml
apiVersion: getambassador.io/v2
kind: AuthService
metadata:
  name: release-name-ambassador-auth
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ambassador-auth
    product: aes
spec:
  proto: grpc
  auth_service: 127.0.0.1:8500
---
# Source: ambassador/templates/aes-internal.yaml
# Configure DevPortal
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  # This Mapping name is referenced by convention, it's important to leave as-is.
  name: release-name-ambassador-devportal
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ambassador-devportal
    product: aes
spec:
  prefix: /documentation/
  rewrite: "/docs/"
  service: "127.0.0.1:8500"
---
# Source: ambassador/templates/aes-internal.yaml
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: release-name-ambassador-devportal-assets
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ambassador-devportal-assets
    product: aes
spec:
  prefix: /documentation/(assets|styles)/(.*)(.css)
  prefix_regex: true
  regex_rewrite:
    pattern: /documentation/(.*)
    substitution: /docs/\1
  service: "127.0.0.1:8500"
  add_response_headers:
    cache-control:
      value: "public, max-age=3600, immutable"
      append: false
---
# Source: ambassador/templates/aes-internal.yaml
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  # This Mapping name is what the demo uses. Sigh.
  name: release-name-ambassador-devportal-demo
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ambassador-devportal-demo
    product: aes
spec:
  prefix: /docs/
  rewrite: "/docs/"
  service: "127.0.0.1:8500"
---
# Source: ambassador/templates/aes-internal.yaml
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  # This Mapping name is referenced by convention, it's important to leave as-is.
  name: release-name-ambassador-devportal-api
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ambassador-devportal-api
    product: aes
spec:
  prefix: /openapi/
  rewrite: ""
  service: "127.0.0.1:8500"
---
# Source: ambassador/templates/aes-ratelimit.yaml
apiVersion: getambassador.io/v2
kind: RateLimitService
metadata:
  name: release-name-ambassador-ratelimit
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador
    app.kubernetes.io/part-of: release-name
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ambassador-ratelimit
    product: aes
spec:
  service: 127.0.0.1:8500
---
# Source: ambassador/templates/tests/test-ready.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-ambassador-test-ready"
  labels:
    app.kubernetes.io/name: ambassador
    helm.sh/chart: ambassador-6.6.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['release-name-ambassador:80/ambassador/v0/check_ready']
  restartPolicy: Never
